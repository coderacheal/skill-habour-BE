openapi: 3.0.3
info:
  title: Skill Habour API
  version: 1.0.0
  description: API documentation for My Rails App

servers:
  - url: http://localhost:3001
    description: Local development server

paths:
  /users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
        '422':
          description: Unprocessable Entity - Validation error

  /users/sign_in:
    get:
      summary: Show user sign-in form
      responses:
        '200':
          description: User sign-in form rendered

    post:
      summary: Sign in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User signed in successfully
        '401':
          description: Unauthorized - Invalid credentials

  /users/sign_out:
    delete:
      summary: Sign out a user
      responses:
        '200':
          description: User signed out successfully

  /api/v1/courses:
    post:
      summary: Create a new course
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: integer
      responses:
        '201':
          description: Course created successfully
        '401':
          description: Unauthorized - Token is missing or invalid

    get:
      summary: List all courses
      responses:
        '200':
          description: Successful response

  /api/v1/courses/{course_id}:
    get:
      summary: Get details of a specific course
      parameters:
        - name: course_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: integer
                  created_at:
                    type: string
                  updated_at:
                    type: string
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string

  /api/v1/courses/{course_id}/reservations:
    post:
      summary: Create a reservation for a course
      security:
        - BearerAuth: []
      parameters:
        - name: course_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
      responses:
        '201':
          description: Reservation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  course_id:
                    type: integer
                  user_id:
                    type: integer
                  reservation_date:
                    type: string
                  price:
                    type: integer
                  created_at:
                    type: string
                  updated_at:
                    type: string
        '401':
          description: Unauthorized - Token is missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string

    get:
      summary: List all reservations for a course
      parameters:
        - name: course_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    course_id:
                      type: integer
                    user_id:
                      type: integer
                    reservation_date:
                      type: string
                    price:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string

  /api/v1/courses/{course_id}/reservations/{id}:
    delete:
      summary: Delete a reservation for a course
      security:
        - BearerAuth: []
      parameters:
        - name: course_id
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Reservation deleted successfully
        '401':
          description: Unauthorized - Token is missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
        '404':
          description: Reservation or Course not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Course:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string

    CourseInput:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: integer

    Reservation:
      type: object
      properties:
        id:
          type: integer
        course_id:
          type: integer
        user_id:
          type: integer
        reservation_date:
          type: string
        price:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string

    ReservationInput:
      type: object
      properties:
        user_id:
          type: integer

    ReservationList:
      type: array
      items:
        $ref: '#/components/schemas/Reservation'
